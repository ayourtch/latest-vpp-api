/*
   Autogenerated Data, Do not Edit!
*/
#![allow(dead_code,unused_mut,unused_variables,unused_must_use,non_camel_case_types,unused_imports,non_snake_case)]
use vpp_api_macros::{VppMessage,VppUnionIdent};
use std::convert::TryInto;
use serde::{de::DeserializeOwned, Deserialize, Serialize};
pub use vpp_api_encoding::typ::*;
pub use vpp_api_encoding;
use vpp_api_message::VppApiMessage;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum;
use crate::ip_types::*;
use crate::interface_types::*;
// Implementation for teib_entry
#[derive(Debug, Clone, Serialize, Deserialize, Default)]
pub struct TeibEntry {
	pub sw_if_index : InterfaceIndex,
	pub peer : Address,
	pub nh : Address,
	pub nh_table_id : u32,
}
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)]
#[message_name_and_crc(teib_entry_add_del_8016cfd2)]
pub struct TeibEntryAddDel {
	pub client_index : u32,
	pub context : u32,
	pub is_add : u8,
	pub entry : TeibEntry,
}
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)]
#[message_name_and_crc(teib_entry_add_del_reply_e8d4e804)]
pub struct TeibEntryAddDelReply {
	pub context : u32,
	pub retval : i32,
}
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)]
#[message_name_and_crc(teib_dump_51077d14)]
pub struct TeibDump {
	pub client_index : u32,
	pub context : u32,
}
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)]
#[message_name_and_crc(teib_details_981ee1a1)]
pub struct TeibDetails {
	pub context : u32,
	pub entry : TeibEntry,
}
