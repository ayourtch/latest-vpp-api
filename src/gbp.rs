/*
   Autogenerated Data, Do not Edit! 
*/
#![allow(dead_code,unused_mut,unused_variables,unused_must_use,non_camel_case_types,unused_imports,non_snake_case)]
use vpp_api_macros::{VppMessage,VppUnionIdent}; 
use std::convert::TryInto; 
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum;
use crate::ip_types::*; 
use crate::interface_types::*; 
use crate::ethernet_types::*; 
// Implementation for gbp_bridge_domain 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpBridgeDomain { 
	pub bd_id : u32, 
	pub rd_id : u32, 
	pub flags : EnumFlag<GbpBridgeDomainFlags>, 
	pub bvi_sw_if_index : InterfaceIndex, 
	pub uu_fwd_sw_if_index : InterfaceIndex, 
	pub bm_flood_sw_if_index : InterfaceIndex, 
} 
// Implementation for gbp_route_domain 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpRouteDomain { 
	pub rd_id : u32, 
	pub ip4_table_id : u32, 
	pub ip6_table_id : u32, 
	pub ip4_uu_sw_if_index : InterfaceIndex, 
	pub ip6_uu_sw_if_index : InterfaceIndex, 
	pub scope : GbpScope, 
} 
// Implementation for gbp_endpoint_tun 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpEndpointTun { 
	pub src : Address, 
	pub dst : Address, 
} 
// Implementation for gbp_endpoint 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpEndpoint { 
	pub sw_if_index : InterfaceIndex, 
	pub sclass : u16, 
	pub flags : EnumFlag<GbpEndpointFlags>, 
	pub mac : MacAddress, 
	pub tun : GbpEndpointTun, 
	pub n_ips : u8, 
	pub ips : VariableSizeArray<Address>, 
} 
// Implementation for gbp_endpoint_retention 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpEndpointRetention { 
	pub remote_ep_timeout : u32, 
} 
// Implementation for gbp_endpoint_group 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpEndpointGroup { 
	pub vnid : u32, 
	pub sclass : u16, 
	pub bd_id : u32, 
	pub rd_id : u32, 
	pub uplink_sw_if_index : InterfaceIndex, 
	pub retention : GbpEndpointRetention, 
} 
// Implementation for gbp_recirc 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpRecirc { 
	pub sw_if_index : InterfaceIndex, 
	pub sclass : u16, 
	pub is_ext : bool, 
} 
// Implementation for gbp_subnet 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpSubnet { 
	pub rd_id : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub sclass : u16, 
	pub typ : GbpSubnetType, 
	pub prefix : Prefix, 
} 
// Implementation for gbp_next_hop 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpNextHop { 
	pub ip : Address, 
	pub mac : MacAddress, 
	pub bd_id : u32, 
	pub rd_id : u32, 
} 
// Implementation for gbp_next_hop_set 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpNextHopSet { 
	pub hash_mode : GbpHashMode, 
	pub n_nhs : u8, 
	pub nhs : FixedSizeArray<GbpNextHop, typenum::U8>, 
} 
// Implementation for gbp_rule 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpRule { 
	pub action : GbpRuleAction, 
	pub nh_set : GbpNextHopSet, 
} 
// Implementation for gbp_contract 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpContract { 
	pub scope : GbpScope, 
	pub sclass : u16, 
	pub dclass : u16, 
	pub acl_index : u32, 
	pub n_ether_types : u8, 
	pub allowed_ethertypes : FixedSizeArray<u16, typenum::U16>, 
	pub n_rules : u8, 
	pub rules : VariableSizeArray<GbpRule>, 
} 
// Implementation for gbp_vxlan_tunnel 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpVxlanTunnel { 
	pub vni : u32, 
	pub mode : GbpVxlanTunnelMode, 
	pub bd_rd_id : u32, 
	pub src : Ip4Address, 
} 
// Implementation for gbp_ext_itf 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GbpExtItf { 
	pub sw_if_index : InterfaceIndex, 
	pub bd_id : u32, 
	pub rd_id : u32, 
	pub flags : EnumFlag<GbpExtItfFlags>, 
} 
#[derive(Debug,Serialize, Deserialize, Clone, Copy)] 
pub enum GbpBridgeDomainFlags { 
	 GBP_BD_API_FLAG_NONE=0, 
	 GBP_BD_API_FLAG_DO_NOT_LEARN=1, 
	 GBP_BD_API_FLAG_UU_FWD_DROP=2, 
	 GBP_BD_API_FLAG_MCAST_DROP=4, 
	 GBP_BD_API_FLAG_UCAST_ARP=8, 
} 
impl Default for GbpBridgeDomainFlags { 
	fn default() -> Self { GbpBridgeDomainFlags::GBP_BD_API_FLAG_NONE }
}
impl AsEnumFlag for GbpBridgeDomainFlags {
	 fn as_u32(data: &Self) -> u32{
		 *data as u32
	 }
	 fn from_u32(data: u32) -> Self{
		 match data{
			 0 => GbpBridgeDomainFlags::GBP_BD_API_FLAG_NONE, 
			 1 => GbpBridgeDomainFlags::GBP_BD_API_FLAG_DO_NOT_LEARN, 
			 2 => GbpBridgeDomainFlags::GBP_BD_API_FLAG_UU_FWD_DROP, 
			 4 => GbpBridgeDomainFlags::GBP_BD_API_FLAG_MCAST_DROP, 
			 8 => GbpBridgeDomainFlags::GBP_BD_API_FLAG_UCAST_ARP, 
			_ => panic!("Invalid Enum Descriminant")
		 }
	 }
	 fn size_of_enum_flag() -> u32{
		 32 as u32
	}
}
#[derive(Debug,Serialize, Deserialize, Clone, Copy)] 
pub enum GbpEndpointFlags { 
	 GBP_API_ENDPOINT_FLAG_NONE=0, 
	 GBP_API_ENDPOINT_FLAG_BOUNCE=1, 
	 GBP_API_ENDPOINT_FLAG_REMOTE=2, 
	 GBP_API_ENDPOINT_FLAG_LEARNT=4, 
	 GBP_API_ENDPOINT_FLAG_EXTERNAL=8, 
} 
impl Default for GbpEndpointFlags { 
	fn default() -> Self { GbpEndpointFlags::GBP_API_ENDPOINT_FLAG_NONE }
}
impl AsEnumFlag for GbpEndpointFlags {
	 fn as_u32(data: &Self) -> u32{
		 *data as u32
	 }
	 fn from_u32(data: u32) -> Self{
		 match data{
			 0 => GbpEndpointFlags::GBP_API_ENDPOINT_FLAG_NONE, 
			 1 => GbpEndpointFlags::GBP_API_ENDPOINT_FLAG_BOUNCE, 
			 2 => GbpEndpointFlags::GBP_API_ENDPOINT_FLAG_REMOTE, 
			 4 => GbpEndpointFlags::GBP_API_ENDPOINT_FLAG_LEARNT, 
			 8 => GbpEndpointFlags::GBP_API_ENDPOINT_FLAG_EXTERNAL, 
			_ => panic!("Invalid Enum Descriminant")
		 }
	 }
	 fn size_of_enum_flag() -> u32{
		 32 as u32
	}
}
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum GbpSubnetType { 
	 GBP_API_SUBNET_TRANSPORT=1, 
	 GBP_API_SUBNET_STITCHED_INTERNAL=2, 
	 GBP_API_SUBNET_STITCHED_EXTERNAL=3, 
	 GBP_API_SUBNET_L3_OUT=4, 
	 GBP_API_SUBNET_ANON_L3_OUT=5, 
} 
impl Default for GbpSubnetType { 
	fn default() -> Self { GbpSubnetType::GBP_API_SUBNET_TRANSPORT }
}
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum GbpHashMode { 
	 GBP_API_HASH_MODE_SRC_IP=1, 
	 GBP_API_HASH_MODE_DST_IP=2, 
	 GBP_API_HASH_MODE_SYMMETRIC=3, 
} 
impl Default for GbpHashMode { 
	fn default() -> Self { GbpHashMode::GBP_API_HASH_MODE_SRC_IP }
}
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum GbpRuleAction { 
	 GBP_API_RULE_PERMIT=1, 
	 GBP_API_RULE_DENY=2, 
	 GBP_API_RULE_REDIRECT=3, 
} 
impl Default for GbpRuleAction { 
	fn default() -> Self { GbpRuleAction::GBP_API_RULE_PERMIT }
}
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum GbpVxlanTunnelMode { 
	 GBP_VXLAN_TUNNEL_MODE_L2=1, 
	 GBP_VXLAN_TUNNEL_MODE_L3=2, 
} 
impl Default for GbpVxlanTunnelMode { 
	fn default() -> Self { GbpVxlanTunnelMode::GBP_VXLAN_TUNNEL_MODE_L2 }
}
#[derive(Debug,Serialize, Deserialize, Clone, Copy)] 
pub enum GbpExtItfFlags { 
	 GBP_API_EXT_ITF_F_NONE=0, 
	 GBP_API_EXT_ITF_F_ANON=1, 
} 
impl Default for GbpExtItfFlags { 
	fn default() -> Self { GbpExtItfFlags::GBP_API_EXT_ITF_F_NONE }
}
impl AsEnumFlag for GbpExtItfFlags {
	 fn as_u32(data: &Self) -> u32{
		 *data as u32
	 }
	 fn from_u32(data: u32) -> Self{
		 match data{
			 0 => GbpExtItfFlags::GBP_API_EXT_ITF_F_NONE, 
			 1 => GbpExtItfFlags::GBP_API_EXT_ITF_F_ANON, 
			_ => panic!("Invalid Enum Descriminant")
		 }
	 }
	 fn size_of_enum_flag() -> u32{
		 32 as u32
	}
}
pub type GbpScope=u16; 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_bridge_domain_add_918e8c01)] 
pub struct GbpBridgeDomainAdd { 
	pub client_index : u32, 
	pub context : u32, 
	pub bd : GbpBridgeDomain, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_bridge_domain_add_reply_e8d4e804)] 
pub struct GbpBridgeDomainAddReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_bridge_domain_del_c25fdce6)] 
pub struct GbpBridgeDomainDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub bd_id : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_bridge_domain_del_reply_e8d4e804)] 
pub struct GbpBridgeDomainDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_bridge_domain_dump_51077d14)] 
pub struct GbpBridgeDomainDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_bridge_domain_dump_reply_e8d4e804)] 
pub struct GbpBridgeDomainDumpReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_bridge_domain_details_51d51be9)] 
pub struct GbpBridgeDomainDetails { 
	pub context : u32, 
	pub bd : GbpBridgeDomain, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_route_domain_add_204c79e1)] 
pub struct GbpRouteDomainAdd { 
	pub client_index : u32, 
	pub context : u32, 
	pub rd : GbpRouteDomain, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_route_domain_add_reply_e8d4e804)] 
pub struct GbpRouteDomainAddReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_route_domain_del_bee4edcd)] 
pub struct GbpRouteDomainDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub rd_id : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_route_domain_del_reply_e8d4e804)] 
pub struct GbpRouteDomainDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_route_domain_dump_51077d14)] 
pub struct GbpRouteDomainDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_route_domain_dump_reply_e8d4e804)] 
pub struct GbpRouteDomainDumpReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_route_domain_details_a78bfbca)] 
pub struct GbpRouteDomainDetails { 
	pub context : u32, 
	pub rd : GbpRouteDomain, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_endpoint_add_7b3af7de)] 
pub struct GbpEndpointAdd { 
	pub client_index : u32, 
	pub context : u32, 
	pub endpoint : GbpEndpoint, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_endpoint_add_reply_1dd3ff3e)] 
pub struct GbpEndpointAddReply { 
	pub context : u32, 
	pub retval : i32, 
	pub handle : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_endpoint_del_b93cd566)] 
pub struct GbpEndpointDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub handle : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_endpoint_del_reply_e8d4e804)] 
pub struct GbpEndpointDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_endpoint_dump_51077d14)] 
pub struct GbpEndpointDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_endpoint_details_8dd8fbd3)] 
pub struct GbpEndpointDetails { 
	pub context : u32, 
	pub age : f64, 
	pub handle : u32, 
	pub endpoint : GbpEndpoint, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_endpoint_group_add_301ddf15)] 
pub struct GbpEndpointGroupAdd { 
	pub client_index : u32, 
	pub context : u32, 
	pub epg : GbpEndpointGroup, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_endpoint_group_add_reply_e8d4e804)] 
pub struct GbpEndpointGroupAddReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_endpoint_group_del_3436b8b7)] 
pub struct GbpEndpointGroupDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub sclass : u16, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_endpoint_group_del_reply_e8d4e804)] 
pub struct GbpEndpointGroupDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_endpoint_group_dump_51077d14)] 
pub struct GbpEndpointGroupDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_endpoint_group_details_ab71d723)] 
pub struct GbpEndpointGroupDetails { 
	pub context : u32, 
	pub epg : GbpEndpointGroup, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_recirc_add_del_718c69c3)] 
pub struct GbpRecircAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub recirc : GbpRecirc, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_recirc_add_del_reply_e8d4e804)] 
pub struct GbpRecircAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_recirc_dump_51077d14)] 
pub struct GbpRecircDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_recirc_details_66ecc42e)] 
pub struct GbpRecircDetails { 
	pub context : u32, 
	pub recirc : GbpRecirc, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_subnet_add_del_a8803c80)] 
pub struct GbpSubnetAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub subnet : GbpSubnet, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_subnet_add_del_reply_e8d4e804)] 
pub struct GbpSubnetAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_subnet_dump_51077d14)] 
pub struct GbpSubnetDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_subnet_details_cbc5ca18)] 
pub struct GbpSubnetDetails { 
	pub context : u32, 
	pub subnet : GbpSubnet, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_contract_add_del_aa8d652d)] 
pub struct GbpContractAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub contract : GbpContract, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_contract_add_del_reply_1992deab)] 
pub struct GbpContractAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
	pub stats_index : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_contract_dump_51077d14)] 
pub struct GbpContractDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_contract_details_65dec325)] 
pub struct GbpContractDetails { 
	pub context : u32, 
	pub contract : GbpContract, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_vxlan_tunnel_add_3e070b35)] 
pub struct GbpVxlanTunnelAdd { 
	pub client_index : u32, 
	pub context : u32, 
	pub tunnel : GbpVxlanTunnel, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_vxlan_tunnel_add_reply_5383d31f)] 
pub struct GbpVxlanTunnelAddReply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_vxlan_tunnel_del_8d1f2fe9)] 
pub struct GbpVxlanTunnelDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub vni : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_vxlan_tunnel_del_reply_e8d4e804)] 
pub struct GbpVxlanTunnelDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_vxlan_tunnel_dump_51077d14)] 
pub struct GbpVxlanTunnelDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_vxlan_tunnel_details_65c6c818)] 
pub struct GbpVxlanTunnelDetails { 
	pub context : u32, 
	pub tunnel : GbpVxlanTunnel, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_ext_itf_add_del_7606d0e1)] 
pub struct GbpExtItfAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub ext_itf : GbpExtItf, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_ext_itf_add_del_reply_e8d4e804)] 
pub struct GbpExtItfAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_ext_itf_dump_51077d14)] 
pub struct GbpExtItfDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(gbp_ext_itf_details_519c3d3c)] 
pub struct GbpExtItfDetails { 
	pub context : u32, 
	pub ext_itf : GbpExtItf, 
} 
