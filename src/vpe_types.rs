/*
   Autogenerated Data, Do not Edit! 
*/
#![allow(dead_code,unused_mut,unused_variables,unused_must_use,non_camel_case_types,unused_imports,non_snake_case)]
use vpp_api_macros::{VppMessage,VppUnionIdent}; 
use std::convert::TryInto; 
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use vpp_api_message::VppApiMessage;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum;
// Implementation for version 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct Version { 
	pub major : u32, 
	pub minor : u32, 
	pub patch : u32, 
	pub pre_release : FixedSizeArray<u8, typenum::U17>, 
	pub build_metadata : FixedSizeArray<u8, typenum::U17>, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum LogLevel { 
	 VPE_API_LOG_LEVEL_EMERG=0, 
	 VPE_API_LOG_LEVEL_ALERT=1, 
	 VPE_API_LOG_LEVEL_CRIT=2, 
	 VPE_API_LOG_LEVEL_ERR=3, 
	 VPE_API_LOG_LEVEL_WARNING=4, 
	 VPE_API_LOG_LEVEL_NOTICE=5, 
	 VPE_API_LOG_LEVEL_INFO=6, 
	 VPE_API_LOG_LEVEL_DEBUG=7, 
	 VPE_API_LOG_LEVEL_DISABLED=8, 
} 
impl Default for LogLevel { 
	fn default() -> Self { LogLevel::VPE_API_LOG_LEVEL_EMERG }
}
pub type Timestamp=f64; 
pub type Timedelta=f64; 
