/*
   Autogenerated Data, Do not Edit! 
*/
#![allow(dead_code,unused_mut,unused_variables,unused_must_use,non_camel_case_types,unused_imports,non_snake_case)]
use vpp_api_macros::{VppMessage,VppUnionIdent}; 
use std::convert::TryInto; 
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use crate::VppNamedMessage;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum;
use crate::ip_types::*; 
use crate::interface_types::*; 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_add_del_tunnel_0c09dc80)] 
pub struct VxlanAddDelTunnel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub instance : u32, 
	pub src_address : Address, 
	pub dst_address : Address, 
	pub mcast_sw_if_index : InterfaceIndex, 
	pub encap_vrf_id : u32, 
	pub decap_next_index : u32, 
	pub vni : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_add_del_tunnel_v2_4f223f40)] 
pub struct VxlanAddDelTunnelV2 { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub instance : u32, 
	pub src_address : Address, 
	pub dst_address : Address, 
	pub src_port : u16, 
	pub dst_port : u16, 
	pub mcast_sw_if_index : InterfaceIndex, 
	pub encap_vrf_id : u32, 
	pub decap_next_index : u32, 
	pub vni : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_add_del_tunnel_v3_0072b037)] 
pub struct VxlanAddDelTunnelV3 { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub instance : u32, 
	pub src_address : Address, 
	pub dst_address : Address, 
	pub src_port : u16, 
	pub dst_port : u16, 
	pub mcast_sw_if_index : InterfaceIndex, 
	pub encap_vrf_id : u32, 
	pub decap_next_index : u32, 
	pub vni : u32, 
	pub is_l3 : bool, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_add_del_tunnel_reply_5383d31f)] 
pub struct VxlanAddDelTunnelReply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_add_del_tunnel_v2_reply_5383d31f)] 
pub struct VxlanAddDelTunnelV2Reply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_add_del_tunnel_v3_reply_5383d31f)] 
pub struct VxlanAddDelTunnelV3Reply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_tunnel_dump_f9e6675e)] 
pub struct VxlanTunnelDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_tunnel_v2_dump_f9e6675e)] 
pub struct VxlanTunnelV2Dump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_tunnel_details_c3916cb1)] 
pub struct VxlanTunnelDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub instance : u32, 
	pub src_address : Address, 
	pub dst_address : Address, 
	pub mcast_sw_if_index : InterfaceIndex, 
	pub encap_vrf_id : u32, 
	pub decap_next_index : u32, 
	pub vni : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_tunnel_v2_details_d3bdd4d9)] 
pub struct VxlanTunnelV2Details { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub instance : u32, 
	pub src_address : Address, 
	pub dst_address : Address, 
	pub src_port : u16, 
	pub dst_port : u16, 
	pub mcast_sw_if_index : InterfaceIndex, 
	pub encap_vrf_id : u32, 
	pub decap_next_index : u32, 
	pub vni : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(sw_interface_set_vxlan_bypass_65247409)] 
pub struct SwInterfaceSetVxlanBypass { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub is_ipv6 : bool, 
	pub enable : bool, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(sw_interface_set_vxlan_bypass_reply_e8d4e804)] 
pub struct SwInterfaceSetVxlanBypassReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_offload_rx_9cc95087)] 
pub struct VxlanOffloadRx { 
	pub client_index : u32, 
	pub context : u32, 
	pub hw_if_index : InterfaceIndex, 
	pub sw_if_index : InterfaceIndex, 
	pub enable : bool, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_offload_rx_reply_e8d4e804)] 
pub struct VxlanOffloadRxReply { 
	pub context : u32, 
	pub retval : i32, 
} 
