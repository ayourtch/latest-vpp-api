/*
   Autogenerated Data, Do not Edit! 
*/
#![allow(dead_code,unused_mut,unused_variables,unused_must_use,non_camel_case_types,unused_imports,non_snake_case)]
use vpp_api_macros::{VppMessage,VppUnionIdent}; 
use std::convert::TryInto; 
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use crate::VppNamedMessage;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum;
use crate::ip_types::*; 
use crate::interface_types::*; 
// Implementation for igmp_group 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct IgmpGroup { 
	pub filter : FilterMode, 
	pub n_srcs : u8, 
	pub sw_if_index : InterfaceIndex, 
	pub gaddr : Ip4Address, 
	pub saddrs : VariableSizeArray<Ip4Address>, 
} 
// Implementation for group_prefix 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct GroupPrefix { 
	pub typ : GroupPrefixType, 
	pub prefix : Prefix, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum FilterMode { 
	 EXCLUDE=0, 
	 INCLUDE=1, 
} 
impl Default for FilterMode { 
	fn default() -> Self { FilterMode::EXCLUDE }
}
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum GroupPrefixType { 
	 ASM=0, 
	 SSM=1, 
} 
impl Default for GroupPrefixType { 
	fn default() -> Self { GroupPrefixType::ASM }
}
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_listen_19a49f1e)] 
pub struct IgmpListen { 
	pub client_index : u32, 
	pub context : u32, 
	pub group : IgmpGroup, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_listen_reply_e8d4e804)] 
pub struct IgmpListenReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_enable_disable_b1edfb96)] 
pub struct IgmpEnableDisable { 
	pub client_index : u32, 
	pub context : u32, 
	pub enable : bool, 
	pub mode : u8, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_enable_disable_reply_e8d4e804)] 
pub struct IgmpEnableDisableReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_proxy_device_add_del_0b9be9ce)] 
pub struct IgmpProxyDeviceAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub add : u8, 
	pub vrf_id : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_proxy_device_add_del_reply_e8d4e804)] 
pub struct IgmpProxyDeviceAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_proxy_device_add_del_interface_1a9ec24a)] 
pub struct IgmpProxyDeviceAddDelInterface { 
	pub client_index : u32, 
	pub context : u32, 
	pub add : bool, 
	pub vrf_id : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_proxy_device_add_del_interface_reply_e8d4e804)] 
pub struct IgmpProxyDeviceAddDelInterfaceReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_dump_f9e6675e)] 
pub struct IgmpDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_details_38f09929)] 
pub struct IgmpDetails { 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub saddr : Ip4Address, 
	pub gaddr : Ip4Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_clear_interface_f9e6675e)] 
pub struct IgmpClearInterface { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_clear_interface_reply_e8d4e804)] 
pub struct IgmpClearInterfaceReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(want_igmp_events_cfaccc1f)] 
pub struct WantIgmpEvents { 
	pub client_index : u32, 
	pub context : u32, 
	pub enable : u32, 
	pub pid : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(want_igmp_events_reply_e8d4e804)] 
pub struct WantIgmpEventsReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_event_85fe93ec)] 
pub struct IgmpEvent { 
	pub sw_if_index : InterfaceIndex, 
	pub filter : FilterMode, 
	pub saddr : Ip4Address, 
	pub gaddr : Ip4Address, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_group_prefix_set_5b14a5ce)] 
pub struct IgmpGroupPrefixSet { 
	pub client_index : u32, 
	pub context : u32, 
	pub gp : GroupPrefix, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_group_prefix_set_reply_e8d4e804)] 
pub struct IgmpGroupPrefixSetReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_group_prefix_dump_51077d14)] 
pub struct IgmpGroupPrefixDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(igmp_group_prefix_details_259ccd81)] 
pub struct IgmpGroupPrefixDetails { 
	pub context : u32, 
	pub gp : GroupPrefix, 
} 
