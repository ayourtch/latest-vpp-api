/*
   Autogenerated Data, Do not Edit! 
*/
#![allow(dead_code,unused_mut,unused_variables,unused_must_use,non_camel_case_types,unused_imports,non_snake_case)]
use vpp_api_macros::{VppMessage,VppUnionIdent}; 
use std::convert::TryInto; 
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum;
use crate::ip_types::*; 
// Implementation for punt_l4 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct PuntL4 { 
	pub af : AddressFamily, 
	pub protocol : IpProto, 
	pub port : u16, 
} 
// Implementation for punt_ip_proto 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct PuntIpProto { 
	pub af : AddressFamily, 
	pub protocol : IpProto, 
} 
// Implementation for punt_exception 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct PuntException { 
	pub id : u32, 
} 
// Implementation for punt 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct Punt { 
	pub typ : PuntType, 
	pub punt : PuntUnion, 
} 
// Implementation for punt_reason 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct PuntReason { 
	pub id : u32, 
	pub name : VariableSizeString, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, Default, VppUnionIdent)] 
#[types(PuntException:4)] 
#[types(PuntL4:4)] 
#[types(PuntIpProto:2)] 
pub struct PuntUnion(FixedSizeArray<u8, typenum::U4>); 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum PuntType { 
	 PUNT_API_TYPE_L4=1, 
	 PUNT_API_TYPE_IP_PROTO=2, 
	 PUNT_API_TYPE_EXCEPTION=3, 
} 
impl Default for PuntType { 
	fn default() -> Self { PuntType::PUNT_API_TYPE_L4 }
}
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(set_punt_aa83d523)] 
pub struct SetPunt { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub punt : Punt, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(set_punt_reply_e8d4e804)] 
pub struct SetPuntReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(punt_socket_register_95268cbf)] 
pub struct PuntSocketRegister { 
	pub client_index : u32, 
	pub context : u32, 
	pub header_version : u32, 
	pub punt : Punt, 
	pub pathname : FixedSizeString<typenum::U108>, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(punt_socket_register_reply_bd30ae90)] 
pub struct PuntSocketRegisterReply { 
	pub context : u32, 
	pub retval : i32, 
	pub pathname : FixedSizeString<typenum::U108>, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(punt_socket_dump_52974935)] 
pub struct PuntSocketDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub typ : PuntType, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(punt_socket_details_de575080)] 
pub struct PuntSocketDetails { 
	pub context : u32, 
	pub punt : Punt, 
	pub pathname : FixedSizeString<typenum::U108>, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(punt_socket_deregister_98fc9102)] 
pub struct PuntSocketDeregister { 
	pub client_index : u32, 
	pub context : u32, 
	pub punt : Punt, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(punt_socket_deregister_reply_e8d4e804)] 
pub struct PuntSocketDeregisterReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(punt_reason_dump_5c0dd4fe)] 
pub struct PuntReasonDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub reason : PuntReason, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(punt_reason_details_2c9d4a40)] 
pub struct PuntReasonDetails { 
	pub context : u32, 
	pub reason : PuntReason, 
} 
