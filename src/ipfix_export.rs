/*
   Autogenerated Data, Do not Edit! 
*/
#![allow(dead_code,unused_mut,unused_variables,unused_must_use,non_camel_case_types,unused_imports,non_snake_case)]
use vpp_api_macros::{VppMessage,VppUnionIdent}; 
use std::convert::TryInto; 
use serde::{de::DeserializeOwned, Deserialize, Serialize};
pub use vpp_api_encoding::typ::*;
pub use vpp_api_encoding;
use vpp_api_message::VppApiMessage;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum;
use crate::ip_types::*; 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(set_ipfix_exporter_5530c8a0)] 
pub struct SetIpfixExporter { 
	pub client_index : u32, 
	pub context : u32, 
	pub collector_address : Address, 
	pub collector_port : u16, 
	pub src_address : Address, 
	pub vrf_id : u32, 
	pub path_mtu : u32, 
	pub template_interval : u32, 
	pub udp_checksum : bool, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(set_ipfix_exporter_reply_e8d4e804)] 
pub struct SetIpfixExporterReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_exporter_dump_51077d14)] 
pub struct IpfixExporterDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_exporter_details_0dedbfe4)] 
pub struct IpfixExporterDetails { 
	pub context : u32, 
	pub collector_address : Address, 
	pub collector_port : u16, 
	pub src_address : Address, 
	pub vrf_id : u32, 
	pub path_mtu : u32, 
	pub template_interval : u32, 
	pub udp_checksum : bool, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_exporter_create_delete_0753a768)] 
pub struct IpfixExporterCreateDelete { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_create : bool, 
	pub collector_address : Address, 
	pub collector_port : u16, 
	pub src_address : Address, 
	pub vrf_id : u32, 
	pub path_mtu : u32, 
	pub template_interval : u32, 
	pub udp_checksum : bool, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_exporter_create_delete_reply_9ffac24b)] 
pub struct IpfixExporterCreateDeleteReply { 
	pub context : u32, 
	pub retval : i32, 
	pub stat_index : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_all_exporter_get_f75ba505)] 
pub struct IpfixAllExporterGet { 
	pub client_index : u32, 
	pub context : u32, 
	pub cursor : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_all_exporter_get_reply_53b48f5d)] 
pub struct IpfixAllExporterGetReply { 
	pub context : u32, 
	pub retval : i32, 
	pub cursor : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_all_exporter_details_0dedbfe4)] 
pub struct IpfixAllExporterDetails { 
	pub context : u32, 
	pub collector_address : Address, 
	pub collector_port : u16, 
	pub src_address : Address, 
	pub vrf_id : u32, 
	pub path_mtu : u32, 
	pub template_interval : u32, 
	pub udp_checksum : bool, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(set_ipfix_classify_stream_c9cbe053)] 
pub struct SetIpfixClassifyStream { 
	pub client_index : u32, 
	pub context : u32, 
	pub domain_id : u32, 
	pub src_port : u16, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(set_ipfix_classify_stream_reply_e8d4e804)] 
pub struct SetIpfixClassifyStreamReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_classify_stream_dump_51077d14)] 
pub struct IpfixClassifyStreamDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_classify_stream_details_2903539d)] 
pub struct IpfixClassifyStreamDetails { 
	pub context : u32, 
	pub domain_id : u32, 
	pub src_port : u16, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_classify_table_add_del_3e449bb9)] 
pub struct IpfixClassifyTableAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub table_id : u32, 
	pub ip_version : AddressFamily, 
	pub transport_protocol : IpProto, 
	pub is_add : bool, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_classify_table_add_del_reply_e8d4e804)] 
pub struct IpfixClassifyTableAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_classify_table_dump_51077d14)] 
pub struct IpfixClassifyTableDump { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_classify_table_details_1af8c28c)] 
pub struct IpfixClassifyTableDetails { 
	pub context : u32, 
	pub table_id : u32, 
	pub ip_version : AddressFamily, 
	pub transport_protocol : IpProto, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_flush_51077d14)] 
pub struct IpfixFlush { 
	pub client_index : u32, 
	pub context : u32, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(ipfix_flush_reply_e8d4e804)] 
pub struct IpfixFlushReply { 
	pub context : u32, 
	pub retval : i32, 
} 
