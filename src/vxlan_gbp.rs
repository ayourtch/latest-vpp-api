/*
   Autogenerated Data, Do not Edit! 
*/
#![allow(dead_code,unused_mut,unused_variables,unused_must_use,non_camel_case_types,unused_imports,non_snake_case)]
use vpp_api_macros::{VppMessage,VppUnionIdent}; 
use std::convert::TryInto; 
use serde::{de::DeserializeOwned, Deserialize, Serialize};
use vpp_api_encoding::typ::*;
use serde_repr::{Serialize_repr, Deserialize_repr};
use typenum;
use crate::ip_types::*; 
use crate::interface_types::*; 
// Implementation for vxlan_gbp_tunnel 
#[derive(Debug, Clone, Serialize, Deserialize, Default)] 
pub struct VxlanGbpTunnel { 
	pub instance : u32, 
	pub src : Address, 
	pub dst : Address, 
	pub mcast_sw_if_index : InterfaceIndex, 
	pub encap_table_id : u32, 
	pub vni : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub mode : VxlanGbpApiTunnelMode, 
} 
#[derive(Debug, Clone, Serialize_repr, Deserialize_repr)] 
#[repr(u32)]
pub enum VxlanGbpApiTunnelMode { 
	 VXLAN_GBP_API_TUNNEL_MODE_L2=1, 
	 VXLAN_GBP_API_TUNNEL_MODE_L3=2, 
} 
impl Default for VxlanGbpApiTunnelMode { 
	fn default() -> Self { VxlanGbpApiTunnelMode::VXLAN_GBP_API_TUNNEL_MODE_L2 }
}
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_gbp_tunnel_add_del_6c743427)] 
pub struct VxlanGbpTunnelAddDel { 
	pub client_index : u32, 
	pub context : u32, 
	pub is_add : bool, 
	pub tunnel : VxlanGbpTunnel, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_gbp_tunnel_add_del_reply_5383d31f)] 
pub struct VxlanGbpTunnelAddDelReply { 
	pub context : u32, 
	pub retval : i32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_gbp_tunnel_dump_f9e6675e)] 
pub struct VxlanGbpTunnelDump { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(vxlan_gbp_tunnel_details_66e94a89)] 
pub struct VxlanGbpTunnelDetails { 
	pub context : u32, 
	pub tunnel : VxlanGbpTunnel, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(sw_interface_set_vxlan_gbp_bypass_65247409)] 
pub struct SwInterfaceSetVxlanGbpBypass { 
	pub client_index : u32, 
	pub context : u32, 
	pub sw_if_index : InterfaceIndex, 
	pub is_ipv6 : bool, 
	pub enable : bool, 
} 
#[derive(Debug, Clone, Serialize, Deserialize, VppMessage)] 
#[message_name_and_crc(sw_interface_set_vxlan_gbp_bypass_reply_e8d4e804)] 
pub struct SwInterfaceSetVxlanGbpBypassReply { 
	pub context : u32, 
	pub retval : i32, 
} 
